name: "‚≠ê Qwen Code"

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  review:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    environment: 'Agents/Bots'
    env:
      HAS_QWEN_OAUTH_CREDENTIALS: ${{ and(secrets.QWEN_CODE_ACCESS_TOKEN != '', secrets.QWEN_CODE_REFRESH_TOKEN != '') }}
    steps:
      - name: Check for Qwen OAuth credentials
        if: env.HAS_QWEN_OAUTH_CREDENTIALS == 'false'
        run: |
          echo "QWEN_CODE_ACCESS_TOKEN and/or QWEN_CODE_REFRESH_TOKEN secrets are not configured. Skipping automated Qwen code review."
      - name: Checkout repository
        if: env.HAS_QWEN_OAUTH_CREDENTIALS == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch base branch
        if: env.HAS_QWEN_OAUTH_CREDENTIALS == 'true'
        run: git fetch origin "${{ github.event.pull_request.base.ref }}" --depth=1

      - name: Set up Node.js
        if: env.HAS_QWEN_OAUTH_CREDENTIALS == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Qwen Code CLI
        if: env.HAS_QWEN_OAUTH_CREDENTIALS == 'true'
        run: npm install -g @qwen-code/qwen-code@latest

      - name: Configure Qwen OAuth credentials
        if: env.HAS_QWEN_OAUTH_CREDENTIALS == 'true'
        run: |
          set -euo pipefail
          mkdir -p "$HOME/.qwen"
          cat <<EOF > "$HOME/.qwen/oauth_creds.json"
          {
            "access_token": "${{ secrets.QWEN_CODE_ACCESS_TOKEN }}",
            "refresh_token": "${{ secrets.QWEN_CODE_REFRESH_TOKEN }}",
            "token_type": "Bearer",
            "resource_url": "portal.qwen.ai",
            "expiry_date": 1757452472185
          }
          EOF
          chmod 600 "$HOME/.qwen/oauth_creds.json"

      - name: Configure Qwen settings
        if: env.HAS_QWEN_OAUTH_CREDENTIALS == 'true'
        run: |
          set -euo pipefail
          mkdir -p "$HOME/.qwen"
          cat <<'EOF' > "$HOME/.qwen/settings.json"
          {
            "security": {
              "auth": {
                "selectedType": "QWEN_OAUTH"
              }
            }
          }
          EOF

      - name: Generate pull request diff
        if: env.HAS_QWEN_OAUTH_CREDENTIALS == 'true'
        run: |
          git diff --stat
          git diff "${{ github.event.pull_request.base.sha }}" HEAD > pr.diff

      - name: Run Qwen code review
        id: qwen
        if: env.HAS_QWEN_OAUTH_CREDENTIALS == 'true'
        env:
          REVIEW_PROMPT: |
            You are an autonomous Qwen code reviewer running inside a GitHub Actions workflow.
            Review the changes introduced in pull request #${{ github.event.number }} that targets `${{ github.event.pull_request.base.ref }}`.
            Carefully analyze the provided diff and the current repository state to understand the modifications.
            Focus on correctness, testing gaps, security implications, maintainability, and consistency with the project's conventions.
            When you are confident in your analysis, respond with a Markdown report that contains the following sections:
            - **Summary**: Briefly describe the overall change.
            - **Strengths** (optional): Bullet points highlighting what looks good.
            - **Issues**: Bullet points calling out any blocking problems with clear file references and line numbers when possible.
            - **Suggestions** (optional): Non-blocking improvements or refactoring ideas.
            - **Testing**: Tests that were run (or should be run) to verify the change.
            Conclude with an explicit verdict line that starts with either `APPROVED` or `REVISIONS_REQUIRED` to help triage.
        run: |
          set -euo pipefail
          printf '%s\n' "$REVIEW_PROMPT" > review_prompt.txt

          qwen --prompt "$REVIEW_PROMPT" < pr.diff | tee qwen-review.md

          {
            echo "summary<<'EOF'" >> "$GITHUB_OUTPUT"
            cat qwen-review.md >> "$GITHUB_OUTPUT"
            echo "EOF" >> "$GITHUB_OUTPUT"
          }

      - name: Post Qwen review comment
        if: env.HAS_QWEN_OAUTH_CREDENTIALS == 'true' && steps.qwen.outputs.summary != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const summary = ${{ toJSON(steps.qwen.outputs.summary) }};
            if (!summary || summary.trim().length === 0) {
              core.info('No review content generated by Qwen.');
              return;
            }
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: summary,
            });
