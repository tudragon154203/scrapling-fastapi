name: '📝 Aider PR Review'

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  review:
    name: Aider Review
    if: ${{ contains(fromJSON('["OWNER","COLLABORATOR","MEMBER"]'), github.event.pull_request.author_association) }}
    runs-on: ubuntu-latest
    environment: 'Agents/Bots'
    timeout-minutes: 30

    steps:
      - name: Check OpenRouter key
        id: check_key
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          if [ -z "$OPENROUTER_API_KEY" ]; then
            echo "key_present=false" >> "$GITHUB_OUTPUT"
            echo "::notice::Skipping review because OPENROUTER_API_KEY is not set."
          else
            echo "key_present=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Checkout repository
        if: steps.check_key.outputs.key_present == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        if: steps.check_key.outputs.key_present == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Aider
        if: steps.check_key.outputs.key_present == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install aider-chat

      - name: Generate pull request diff and prompt
        if: steps.check_key.outputs.key_present == 'true'
        id: diff
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_URL: ${{ github.event.pull_request.html_url }}
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          BASE_REF: ${{ github.event.pull_request.base.ref }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          set -euo pipefail
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          if ! git cat-file -e "$BASE_SHA^{commit}"; then
            git fetch origin "$BASE_REF" --depth=1
          fi
          git diff "$BASE_SHA...$HEAD_SHA" > pr.diff || true
          diff_bytes=$(wc -c < pr.diff)
          echo "diff_bytes=$diff_bytes" >> "$GITHUB_OUTPUT"
          if [ "$diff_bytes" -eq 0 ]; then
            echo "no_diff=true" >> "$GITHUB_OUTPUT"
          else
            echo "no_diff=false" >> "$GITHUB_OUTPUT"
          fi
          max_bytes=60000
          if [ "$diff_bytes" -gt "$max_bytes" ]; then
            head -c "$max_bytes" pr.diff > pr.truncated.diff
            mv pr.truncated.diff pr.diff
            echo "diff_truncated=true" >> "$GITHUB_OUTPUT"
          else
            echo "diff_truncated=false" >> "$GITHUB_OUTPUT"
          fi
          mkdir -p .github/aider
          {
            printf '%s\n' "You are an experienced software engineer performing a thorough code review for the GitHub pull request below."
            printf '%s\n' ""
            printf '%s\n' "Provide a concise review with three sections:"
            printf '%s\n' "1. **Summary** – highlight the key changes."
            printf '%s\n' "2. **Issues** – list potential bugs, regressions, or risks. Reference files/lines when possible."
            printf '%s\n' "3. **Suggestions** – actionable improvements or follow-up work."
            printf '%s\n' ""
            printf '%s\n' "Focus on correctness, security, performance, and maintainability. If the diff was truncated for length, call that out in your review."
            printf '%s\n' ""
            printf '%s\n' "Pull request: $PR_TITLE"
            printf '%s\n' "URL: $PR_URL"
            printf '%s\n' ""
            printf '%s\n' "Diff:"
            printf '%s\n' '```diff'
          } > .github/aider/review_prompt.md
          cat pr.diff >> .github/aider/review_prompt.md
          printf '\n```\n' >> .github/aider/review_prompt.md

      - name: Run aider review
        if: steps.check_key.outputs.key_present == 'true' && steps.diff.outputs.no_diff != 'true'
        id: aider
        env:
          AIDER_OPENROUTER_API_BASE: https://openrouter.ai/api/v1
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          set -o pipefail
          : > aider_review_raw.txt
          if aider --model openrouter/deepseek/deepseek-chat:free --dry-run --no-auto-commits --no-pretty --no-stream --message-file .github/aider/review_prompt.md 2>&1 | tee aider_review_raw.txt; then
            echo "success=true" >> "$GITHUB_OUTPUT"
          else
            status=$?
            echo "::warning::Aider exited with status $status"
            echo "success=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

      - name: Prepare review comment
        if: steps.check_key.outputs.key_present == 'true' && steps.diff.outputs.no_diff != 'true'
        id: prepare_comment
        env:
          AIDER_SUCCESS: ${{ steps.aider.outputs.success }}
          DIFF_TRUNCATED: ${{ steps.diff.outputs.diff_truncated }}
        run: |
          python <<'PY'
          import os
          import pathlib
          import textwrap

          review_path = pathlib.Path("aider_review_raw.txt")
          success = os.environ.get("AIDER_SUCCESS") == "true"
          truncated = os.environ.get("DIFF_TRUNCATED") == "true"

          body = ""
          if success and review_path.exists():
              body = review_path.read_text().strip()
          else:
              log = review_path.read_text().strip() if review_path.exists() else ""
              body = textwrap.dedent(
                  """
                  ⚠️ Aider review could not be generated automatically.
                  """
              ).strip()
              if log:
                  tail = "\n".join(log.splitlines()[-40:])
                  body += "\n\n```\n" + tail + "\n```"
          if not body:
              body = "Aider did not return any feedback for this pull request."
          if truncated:
              body += "\n\n_Note: The diff was truncated to approximately 60k characters for analysis._"
          pathlib.Path("review_comment.md").write_text(body)
          PY
          if [ -s review_comment.md ]; then
            echo "comment_empty=false" >> "$GITHUB_OUTPUT"
          else
            echo "comment_empty=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Post review comment
        if: steps.check_key.outputs.key_present == 'true' && steps.diff.outputs.no_diff != 'true' && steps.prepare_comment.outputs.comment_empty != 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('review_comment.md', 'utf8').trim();
            if (!body) {
              core.info('Review body empty, skipping comment.');
              return;
            }
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });

      - name: Skip review (missing OpenRouter key)
        if: steps.check_key.outputs.key_present != 'true'
        run: echo 'OpenRouter API key not configured. Aider review skipped.'
