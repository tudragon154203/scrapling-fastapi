name: 'ðŸ”“ Opencode'

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  issue_comment:
    types: [created, edited]
  pull_request_review_comment:
    types: [created, edited]
  issues:
    types: [opened, assigned, reopened]
  pull_request_review:
    types: [submitted, edited]

jobs:
  opencode:
    if: |
      (
        vars.ACTIVE_BOTS == '' ||
        contains(fromJSON(vars.ACTIVE_BOTS || '[]'), 'opencode')
      ) &&
      (
        (
          github.event_name == 'issue_comment' &&
          contains(fromJSON('["OWNER","COLLABORATOR","AUTHOR"]'), github.event.comment.author_association) &&
          (
            startsWith(github.event.comment.body, '@opencode') ||
            startsWith(github.event.comment.body, 'OPENCODE') ||
            startsWith(github.event.comment.body, '/opencode')
          )
        ) ||
        (
          github.event_name == 'pull_request_review_comment' &&
          contains(fromJSON('["OWNER","COLLABORATOR","AUTHOR"]'), github.event.comment.author_association) &&
          (
            startsWith(github.event.comment.body, '@opencode') ||
            startsWith(github.event.comment.body, 'OPENCODE') ||
            startsWith(github.event.comment.body, '/opencode')
          )
        ) ||
        (
          github.event_name == 'pull_request_review' &&
          contains(fromJSON('["OWNER","COLLABORATOR","AUTHOR"]'), github.event.review.author_association) &&
          (
            startsWith(github.event.review.body, '@opencode') ||
            startsWith(github.event.review.body, 'OPENCODE') ||
            startsWith(github.event.review.body, '/opencode')
          )
        ) ||
        (
          github.event_name == 'pull_request' &&
          contains(fromJSON('["OWNER","COLLABORATOR","AUTHOR"]'), github.event.pull_request.author_association) &&
          (
            (
              github.event.pull_request.body != null &&
              (
                contains(github.event.pull_request.body, '@opencode') ||
                contains(github.event.pull_request.body, 'OPENCODE') ||
                contains(github.event.pull_request.body, '/opencode')
              )
            ) ||
            (
              github.event.pull_request.title != null &&
              (
                contains(github.event.pull_request.title, '@opencode') ||
                contains(github.event.pull_request.title, 'OPENCODE') ||
                contains(github.event.pull_request.title, '/opencode')
              )
            )
          )
        ) ||
        (
          github.event_name == 'issues' &&
          contains(fromJSON('["OWNER","COLLABORATOR","AUTHOR"]'), github.event.issue.author_association) &&
          (
            contains(github.event.issue.body, '@opencode') ||
            contains(github.event.issue.body, 'OPENCODE') ||
            contains(github.event.issue.body, '/opencode') ||
            contains(github.event.issue.title, '@opencode') ||
            contains(github.event.issue.title, 'OPENCODE') ||
            contains(github.event.issue.title, '/opencode')
          )
        )
      )
    runs-on: ${{ vars.OS || 'ubuntu-latest' }}
    environment: 'Agents/Bots'
    permissions:
      id-token: write
      contents: write
      pull-requests: write
      issues: write
    concurrency:
      group: opencode-${{ github.workflow }}-${{ github.event_name }}-${{ github.event.issue.number || github.event.pull_request.number || github.run_id }}
      cancel-in-progress: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install opencode CLI
        run: |
          set -euo pipefail
          curl -fsSL https://opencode.ai/install | bash
          echo "$HOME/.opencode/bin" >> "$GITHUB_PATH"

      - name: Determine opencode version
        id: opencode_version
        run: |
          set -euo pipefail
          version="$(opencode --version | tr -d '\n')"
          echo "version=${version}" >> "$GITHUB_OUTPUT"

      - name: Prepare opencode GitHub runner
        env:
          OPC_VERSION: ${{ steps.opencode_version.outputs.version }}
        run: |
          set -euo pipefail
          runner_dir=".github/opencode-runner"
          rm -rf "$runner_dir"
          mkdir -p "$runner_dir"
          base_url="https://raw.githubusercontent.com/sst/opencode/v${OPC_VERSION}/github"
          curl -fsSL "${base_url}/package.json" -o "$runner_dir/package.json"
          curl -fsSL "${base_url}/bun.lock" -o "$runner_dir/bun.lock"
          curl -fsSL "${base_url}/index.ts" -o "$runner_dir/index.ts"
          echo "RUNNER_DIR=$runner_dir" >> "$GITHUB_ENV"

      - name: Install bun
        run: |
          set -euo pipefail
          npm install -g bun

      - name: Install GitHub runner dependencies
        working-directory: ${{ env.RUNNER_DIR }}
        run: |
          set -euo pipefail
          bun install

      - name: Run opencode GitHub agent
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          MODEL: openrouter/${{ vars.OPENROUTER_MODEL != '' && vars.OPENROUTER_MODEL || 'glm-4.5-air' }}
        run: |
          set -euo pipefail
          bun "$RUNNER_DIR/index.ts"
