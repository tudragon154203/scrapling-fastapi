name: 'ðŸ¤– Claude'

on:
  workflow_call:
    inputs:
      event-name:
        required: true
        type: string
      event:
        required: true
        type: string
      target-id:
        required: false
        type: string
      target-type:
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write
  actions: read


jobs:
  claude:
    runs-on: ${{ vars.OS || 'ubuntu-latest' }}
    concurrency:
      group: claude-${{ inputs.target-id != '' && inputs.target-id || github.run_id }}
      cancel-in-progress: true
    environment: 'Agents/Bots'
    env:
      EVENT_NAME: ${{ inputs.event-name }}
      EVENT_PAYLOAD: ${{ inputs.event }}
      TARGET_ID: ${{ inputs.target-id || '' }}
      TARGET_TYPE: ${{ inputs.target-type || '' }}
      GEMINI_MODEL: ${{ vars.GEMINI_MODEL || 'gemini-2.5-flash' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: React with ðŸ‘€ to show Claude is running
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { join } = require('node:path');
            const reactWithEmoji = require(join(process.cwd(), '.github/workflows/scripts/bots/common/javascript/react_with_emoji.cjs'));
            await reactWithEmoji({ github, context, core, reaction: 'eyes' });

      - name: Make setup_router.sh executable
        run: chmod +x ./.github/workflows/scripts/bots/claude/setup_router.sh

      - name: Setup Bun runtime
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Select OpenRouter API key
        id: select_openrouter_key
        run: python .github/workflows/scripts/bots/common/rotate_key/openrouter.py --output-selected-name openrouter_secret_name
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          OPENROUTER_API_KEY_2: ${{ secrets.OPENROUTER_API_KEY_2 }}
          OPENROUTER_API_KEY_3: ${{ secrets.OPENROUTER_API_KEY_3 }}
          OPENROUTER_API_KEY_4: ${{ secrets.OPENROUTER_API_KEY_4 }}
          OPENROUTER_API_KEY_5: ${{ secrets.OPENROUTER_API_KEY_5 }}

      - name: Select Gemini API key
        id: select_gemini_key
        run: python .github/workflows/scripts/bots/common/rotate_key/gemini.py --output-selected-name gemini_secret_name
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_API_KEY_2: ${{ secrets.GEMINI_API_KEY_2 }}
          GEMINI_API_KEY_3: ${{ secrets.GEMINI_API_KEY_3 }}
          GEMINI_API_KEY_4: ${{ secrets.GEMINI_API_KEY_4 }}
          GEMINI_API_KEY_5: ${{ secrets.GEMINI_API_KEY_5 }}


      - name: Start Claude Code Router
        env:
          OPENROUTER_MODEL: ${{ vars.OPENROUTER_MODEL || 'z-ai/glm-4.5-air:free' }}
          GEMINI_MODEL: ${{ vars.GEMINI_MODEL || 'gemini-2.5-flash' }}
        run: ./.github/workflows/scripts/bots/claude/setup_router.sh
        shell: bash

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        env:
          ANTHROPIC_BASE_URL: http://localhost:3456
          ANTHROPIC_API_KEY: "dummy"
        with:
          anthropic_api_key: "dummy"
          prompt: |
              REPO: ${{ github.repository }}
              EVENT: ${{ inputs.event-name }}
              PR NUMBER: ${{ inputs.target-type == 'pull_request' && inputs.target-id || '' }}
              ISSUE NUMBER: ${{ inputs.target-type == 'issue' && inputs.target-id || '' }}

              Act as a helpful GitHub assistant for the current event.
              - For pull requests: review the changes for quality, bugs, security, and performance.
              - For issues: help triage or answer questions.
              - For comments or reviews: address the user's request and provide any necessary analysis.
              - During reviews, provide feedback without running repository tests.

              The repository is already checked out in the working directory.

              Use `gh pr comment` for pull request feedback or `gh issue comment` for issue discussions.
              Use `mcp__github_inline_comment__create_inline_comment` to make inline comments on pull request diffs.
              Only interact through GitHub comments.

          claude_args: |
            --allowedTools "mcp__github_inline_comment__create_inline_comment"
            --allowedTools "Bash(gh pr comment:*)"
            --allowedTools "Bash(gh issue comment:*)"
            --allowedTools "Bash(gh pr diff:*)"
            --allowedTools "Bash(gh pr view:*)"
            --allowedTools "Bash(gh pr list:*)"
            --allowedTools "Bash(gh issue view:*)"
            --allowedTools "Bash(gh issue list:*)"
