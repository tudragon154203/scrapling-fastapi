name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-22.04
    environment: 'Agents/Bots'
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # - name: Setup Bun runtime
      #   uses: oven-sh/setup-bun@v2
      #   with:
      #     bun-version: latest

      - name: Start Claude Code Router
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          set -euo pipefail
          mkdir -p ~/.claude-code-router
          cat > ~/.claude-code-router/config.json <<EOF
          {
            "LOG": false,
            "LOG_LEVEL": "info",
            "CLAUDE_PATH": "",
            "HOST": "127.0.0.1",
            "PORT": 3456,
            "APIKEY": "",
            "API_TIMEOUT_MS": "60000",
            "PROXY_URL": "",
            "transformers": [],
            "Providers": [
              {
                "name": "openrouter",
                "api_base_url": "https://openrouter.ai/api/v1/chat/completions",
                "api_key": "${OPENROUTER_API_KEY}",
                "models": [
                  "qwen/qwen3-coder:free",
                  "z-ai/glm-4.5-air:free",
                  "moonshotai/kimi-k2:free",
                  "deepseek/deepseek-chat-v3.1:free"
                ],
                "transformer": {
                  "use": [
                    "openrouter"
                  ],
                  "tngtech/deepseek-r1t2-chimera:free": {
                    "use": [
                      "deepseek"
                    ]
                  },
                  "deepseek/deepseek-chat-v3-0324:free": {
                    "use": [
                      "deepseek"
                    ]
                  }
                }
              },
              {
                "name": "gemini",
                "api_base_url": "https://generativelanguage.googleapis.com/v1beta/models/",
                "api_key": "${GEMINI_API_KEY}",
                "models": [
                  "gemini-2.5-flash"
                ],
                "transformer": {
                  "use": [
                    "gemini"
                  ]
                }
              }
            ],
            "StatusLine": {
              "enabled": true,
              "currentStyle": "default",
              "default": {
                "modules": [
                  {
                    "type": "workDir",
                    "icon": "",
                    "text": "{{workDirName}}",
                    "color": "bright_blue"
                  },
                  {
                    "type": "model",
                    "icon": "",
                    "text": "{{model}}",
                    "color": "bright_yellow"
                  },
                  {
                    "type": "usage",
                    "icon": "",
                    "text": "{{inputTokens}} / {{outputTokens}}",
                    "color": "bright_magenta"
                  },
                  {
                    "type": "script",
                    "icon": "",
                    "text": "Script Module",
                    "color": "bright_cyan",
                    "scriptPath": ""
                  }
                ]
              },
              "powerline": {
                "modules": []
              }
            },
            "Router": {
              "default": "openrouter,z-ai/glm-4.5-air:free",
              "background": "openrouter,moonshotai/kimi-k2:free",
              "think": "openrouter,deepseek/deepseek-chat-v3.1:free",
              "longContext": "gemini,gemini-2.5-flash",
              "longContextThreshold": 100000,
              "webSearch": "openrouter,moonshotai/kimi-k2:free"
            }
          }
          EOF
          nohup ~/.bun/bin/bunx @musistudio/claude-code-router@latest start &
          sleep 3
        shell: bash

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        env:
          ANTHROPIC_BASE_URL: http://localhost:3456
        with:
          anthropic_api_key: "dummy"

          # Optional: Configure Claude's behavior with CLI arguments
          # claude_args: |
          #   --model claude-opus-4-1-20250805
          #   --max-turns 10
          #   --allowedTools "Bash(npm install),Bash(npm run build),Bash(npm run test:*),Bash(npm run lint:*)"
          #   --system-prompt "Follow our coding standards. Ensure all new code has tests. Use TypeScript for new files."
